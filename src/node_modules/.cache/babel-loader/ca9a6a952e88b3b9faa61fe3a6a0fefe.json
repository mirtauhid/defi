{"ast":null,"code":"import BigNumber from 'bignumber.js';\nimport { ethers } from 'ethers';\nexport const approve = async (lpContract, masterChefContract, account) => lpContract.methods.approve(masterChefContract.options.address, ethers.constants.MaxUint256).send({\n  from: account\n});\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods.enterStaking(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()).send({\n      from: account,\n      gas: 200000\n    }).on('transactionHash', tx => tx.transactionHash);\n  }\n\n  return masterChefContract.methods.deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()).send({\n    from: account,\n    gas: 200000\n  }).on('transactionHash', tx => tx.transactionHash);\n};\nexport const sousStake = async (sousChefContract, amount, account) => sousChefContract.methods.deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()).send({\n  from: account,\n  gas: 200000\n}).on('transactionHash', tx => tx.transactionHash);\nexport const sousStakeBnb = async (sousChefContract, amount, account) => sousChefContract.methods.deposit().send({\n  from: account,\n  gas: 200000,\n  value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()\n}).on('transactionHash', tx => tx.transactionHash);\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods.leaveStaking(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()).send({\n      from: account,\n      gas: 200000\n    }).on('transactionHash', tx => tx.transactionHash);\n  }\n\n  return masterChefContract.methods.withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()).send({\n    from: account,\n    gas: 200000\n  }).on('transactionHash', tx => tx.transactionHash);\n};\nexport const sousUnstake = async (sousChefContract, amount, account) => {\n  // shit code: hard fix for old CTK and BLK\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\n    return sousChefContract.methods.emergencyWithdraw().send({\n      from: account\n    }).on('transactionHash', tx => tx.transactionHash);\n  }\n\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\n    return sousChefContract.methods.emergencyWithdraw().send({\n      from: account\n    }).on('transactionHash', tx => tx.transactionHash);\n  }\n\n  return sousChefContract.methods.withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()).send({\n    from: account,\n    gas: 200000\n  }).on('transactionHash', tx => tx.transactionHash);\n};\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => sousChefContract.methods.emergencyWithdraw().send({\n  from: account\n}).on('transactionHash', tx => tx.transactionHash);\nexport const harvest = async (masterChefContract, pid, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods.leaveStaking('0').send({\n      from: account,\n      gas: 200000\n    }).on('transactionHash', tx => tx.transactionHash);\n  }\n\n  return masterChefContract.methods.deposit(pid, '0').send({\n    from: account,\n    gas: 200000\n  }).on('transactionHash', tx => tx.transactionHash);\n};\nexport const soushHarvest = async (sousChefContract, account) => sousChefContract.methods.deposit('0').send({\n  from: account,\n  gas: 200000\n}).on('transactionHash', tx => tx.transactionHash);\nexport const soushHarvestBnb = async (sousChefContract, account) => sousChefContract.methods.deposit().send({\n  from: account,\n  gas: 200000,\n  value: new BigNumber(0)\n}).on('transactionHash', tx => tx.transactionHash);","map":{"version":3,"sources":["/Users/mirtauhidulislam/Downloads/saltswap-frontend-main/src/utils/callHelpers.ts"],"names":["BigNumber","ethers","approve","lpContract","masterChefContract","account","methods","options","address","constants","MaxUint256","send","from","stake","pid","amount","enterStaking","times","pow","toString","gas","on","tx","transactionHash","deposit","sousStake","sousChefContract","sousStakeBnb","value","unstake","leaveStaking","withdraw","sousUnstake","emergencyWithdraw","sousEmegencyUnstake","harvest","soushHarvest","soushHarvestBnb"],"mappings":"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","sourcesContent":["import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\n\nexport const approve = async (lpContract, masterChefContract, account) =>\n  lpContract.methods.approve(masterChefContract.options.address, ethers.constants.MaxUint256).send({ from: account })\n\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .enterStaking(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n      .send({ from: account, gas: 200000 })\n      .on('transactionHash', (tx) => tx.transactionHash)\n  }\n\n  return masterChefContract.methods\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => tx.transactionHash)\n}\n\nexport const sousStake = async (sousChefContract, amount, account) =>\n  sousChefContract.methods\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => tx.transactionHash)\n\nexport const sousStakeBnb = async (sousChefContract, amount, account) =>\n  sousChefContract.methods\n    .deposit()\n    .send({ from: account, gas: 200000, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\n    .on('transactionHash', (tx) => tx.transactionHash)\n\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .leaveStaking(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n      .send({ from: account, gas: 200000 })\n      .on('transactionHash', (tx) => tx.transactionHash)\n  }\n\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => tx.transactionHash)\n}\n\nexport const sousUnstake = async (sousChefContract, amount, account) => {\n  // shit code: hard fix for old CTK and BLK\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => tx.transactionHash)\n  }\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => tx.transactionHash)\n  }\n\n  return sousChefContract.methods\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => tx.transactionHash)\n}\n\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) =>\n  sousChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => tx.transactionHash)\n\nexport const harvest = async (masterChefContract, pid, account) => {\n  if (pid === 0) {\n    return masterChefContract.methods\n      .leaveStaking('0')\n      .send({ from: account, gas: 200000 })\n      .on('transactionHash', (tx) => tx.transactionHash)\n  }\n\n  return masterChefContract.methods\n    .deposit(pid, '0')\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => tx.transactionHash)\n}\n\nexport const soushHarvest = async (sousChefContract, account) =>\n  sousChefContract.methods\n    .deposit('0')\n    .send({ from: account, gas: 200000 })\n    .on('transactionHash', (tx) => tx.transactionHash)\n\nexport const soushHarvestBnb = async (sousChefContract, account) =>\n  sousChefContract.methods\n    .deposit()\n    .send({ from: account, gas: 200000, value: new BigNumber(0) })\n    .on('transactionHash', (tx) => tx.transactionHash)\n"]},"metadata":{},"sourceType":"module"}