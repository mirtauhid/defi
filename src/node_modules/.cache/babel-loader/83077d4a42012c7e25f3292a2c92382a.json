{"ast":null,"code":"import addresses from 'config/constants/contracts';\nexport const getAddress = address => {\n  const mainNetChainId = 56;\n  const chainId = process.env.REACT_APP_CHAIN_ID;\n  return address[chainId] ? address[chainId] : address[mainNetChainId];\n};\nexport const getCakeAddress = () => getAddress(addresses.cake);\nexport const getMasterChefAddress = () => getAddress(addresses.masterChef);\nexport const getMulticallAddress = () => getAddress(addresses.mulltiCall);\nexport const getWbnbAddress = () => getAddress(addresses.wbnb);\nexport const getLotteryAddress = () => getAddress(addresses.lottery);\nexport const getLotteryTicketAddress = () => getAddress(addresses.lotteryNFT);\nexport const getPancakeProfileAddress = () => getAddress(addresses.pancakeProfile);\nexport const getPancakeRabbitsAddress = () => getAddress(addresses.pancakeRabbits);\nexport const getBunnyFactoryAddress = () => getAddress(addresses.bunnyFactory);\nexport const getClaimRefundAddress = () => getAddress(addresses.claimRefund);\nexport const getPointCenterIfoAddress = () => getAddress(addresses.pointCenterIfo);","map":{"version":3,"sources":["/Users/mirtauhidulislam/Downloads/saltswap-frontend-main/src/utils/addressHelpers.ts"],"names":["addresses","getAddress","address","mainNetChainId","chainId","process","env","REACT_APP_CHAIN_ID","getCakeAddress","cake","getMasterChefAddress","masterChef","getMulticallAddress","mulltiCall","getWbnbAddress","wbnb","getLotteryAddress","lottery","getLotteryTicketAddress","lotteryNFT","getPancakeProfileAddress","pancakeProfile","getPancakeRabbitsAddress","pancakeRabbits","getBunnyFactoryAddress","bunnyFactory","getClaimRefundAddress","claimRefund","getPointCenterIfoAddress","pointCenterIfo"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,4BAAtB;AAGA,OAAO,MAAMC,UAAU,GAAIC,OAAD,IAA8B;AACtD,QAAMC,cAAc,GAAG,EAAvB;AACA,QAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,kBAA5B;AACA,SAAOL,OAAO,CAACE,OAAD,CAAP,GAAmBF,OAAO,CAACE,OAAD,CAA1B,GAAsCF,OAAO,CAACC,cAAD,CAApD;AACD,CAJM;AAMP,OAAO,MAAMK,cAAc,GAAG,MAAMP,UAAU,CAACD,SAAS,CAACS,IAAX,CAAvC;AACP,OAAO,MAAMC,oBAAoB,GAAG,MAAMT,UAAU,CAACD,SAAS,CAACW,UAAX,CAA7C;AACP,OAAO,MAAMC,mBAAmB,GAAG,MAAMX,UAAU,CAACD,SAAS,CAACa,UAAX,CAA5C;AACP,OAAO,MAAMC,cAAc,GAAG,MAAMb,UAAU,CAACD,SAAS,CAACe,IAAX,CAAvC;AACP,OAAO,MAAMC,iBAAiB,GAAG,MAAMf,UAAU,CAACD,SAAS,CAACiB,OAAX,CAA1C;AACP,OAAO,MAAMC,uBAAuB,GAAG,MAAMjB,UAAU,CAACD,SAAS,CAACmB,UAAX,CAAhD;AACP,OAAO,MAAMC,wBAAwB,GAAG,MAAMnB,UAAU,CAACD,SAAS,CAACqB,cAAX,CAAjD;AACP,OAAO,MAAMC,wBAAwB,GAAG,MAAMrB,UAAU,CAACD,SAAS,CAACuB,cAAX,CAAjD;AACP,OAAO,MAAMC,sBAAsB,GAAG,MAAMvB,UAAU,CAACD,SAAS,CAACyB,YAAX,CAA/C;AACP,OAAO,MAAMC,qBAAqB,GAAG,MAAMzB,UAAU,CAACD,SAAS,CAAC2B,WAAX,CAA9C;AACP,OAAO,MAAMC,wBAAwB,GAAG,MAAM3B,UAAU,CAACD,SAAS,CAAC6B,cAAX,CAAjD","sourcesContent":["import addresses from 'config/constants/contracts'\nimport { Address } from 'config/constants/types'\n\nexport const getAddress = (address: Address): string => {\n  const mainNetChainId = 56\n  const chainId = process.env.REACT_APP_CHAIN_ID\n  return address[chainId] ? address[chainId] : address[mainNetChainId]\n}\n\nexport const getCakeAddress = () => getAddress(addresses.cake)\nexport const getMasterChefAddress = () => getAddress(addresses.masterChef)\nexport const getMulticallAddress = () => getAddress(addresses.mulltiCall)\nexport const getWbnbAddress = () => getAddress(addresses.wbnb)\nexport const getLotteryAddress = () => getAddress(addresses.lottery)\nexport const getLotteryTicketAddress = () => getAddress(addresses.lotteryNFT)\nexport const getPancakeProfileAddress = () => getAddress(addresses.pancakeProfile)\nexport const getPancakeRabbitsAddress = () => getAddress(addresses.pancakeRabbits)\nexport const getBunnyFactoryAddress = () => getAddress(addresses.bunnyFactory)\nexport const getClaimRefundAddress = () => getAddress(addresses.claimRefund)\nexport const getPointCenterIfoAddress = () => getAddress(addresses.pointCenterIfo)\n"]},"metadata":{},"sourceType":"module"}