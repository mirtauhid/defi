{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$(),\n    _s7 = $RefreshSig$(),\n    _s8 = $RefreshSig$(),\n    _s9 = $RefreshSig$(),\n    _s10 = $RefreshSig$(),\n    _s11 = $RefreshSig$(),\n    _s12 = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport useWeb3 from 'hooks/useWeb3';\nimport { getAddress, getMasterChefAddress, getCakeAddress, getLotteryAddress, getLotteryTicketAddress, getBunnyFactoryAddress, getPancakeProfileAddress, getPancakeRabbitsAddress, getPointCenterIfoAddress } from 'utils/addressHelpers';\nimport { poolsConfig } from 'config/constants';\nimport { PoolCategory } from 'config/constants/types';\nimport ifo from 'config/abi/ifo.json';\nimport erc20 from 'config/abi/erc20.json';\nimport bunnyFactory from 'config/abi/bunnyFactory.json';\nimport pancakeRabbits from 'config/abi/pancakeRabbits.json';\nimport lottery from 'config/abi/lottery.json';\nimport lotteryTicket from 'config/abi/lotteryNft.json';\nimport masterChef from 'config/abi/masterchef.json';\nimport sousChef from 'config/abi/sousChef.json';\nimport sousChefBnb from 'config/abi/sousChefBnb.json';\nimport profile from 'config/abi/pancakeProfile.json';\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json';\n\nconst useContract = (abi, address, contractOptions) => {\n  _s();\n\n  const web3 = useWeb3();\n  const [contract, setContract] = useState(new web3.eth.Contract(abi, address, contractOptions));\n  useEffect(() => {\n    setContract(new web3.eth.Contract(abi, address, contractOptions));\n  }, [abi, address, contractOptions, web3]);\n  return contract;\n};\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\n\n_s(useContract, \"H6vXffnD1SXpstoLQEVK5mG+lYk=\", false, function () {\n  return [useWeb3];\n});\n\nexport const useIfoContract = address => {\n  _s2();\n\n  const ifoAbi = ifo;\n  return useContract(ifoAbi, address);\n};\n\n_s2(useIfoContract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport const useERC20 = address => {\n  _s3();\n\n  const erc20Abi = erc20;\n  return useContract(erc20Abi, address);\n};\n\n_s3(useERC20, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport const useCake = () => {\n  _s4();\n\n  return useERC20(getCakeAddress());\n};\n\n_s4(useCake, \"y/ZVvzRe9c+8c6LvNpWf2WrO/gU=\", false, function () {\n  return [useERC20];\n});\n\nexport const useBunnyFactory = () => {\n  _s5();\n\n  const bunnyFactoryAbi = bunnyFactory;\n  return useContract(bunnyFactoryAbi, getBunnyFactoryAddress());\n};\n\n_s5(useBunnyFactory, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport const usePancakeRabbits = () => {\n  _s6();\n\n  const pancakeRabbitsAbi = pancakeRabbits;\n  return useContract(pancakeRabbitsAbi, getPancakeRabbitsAddress());\n};\n\n_s6(usePancakeRabbits, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport const useProfile = () => {\n  _s7();\n\n  const profileABIAbi = profile;\n  return useContract(profileABIAbi, getPancakeProfileAddress());\n};\n\n_s7(useProfile, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport const useLottery = () => {\n  _s8();\n\n  const abi = lottery;\n  return useContract(abi, getLotteryAddress());\n};\n\n_s8(useLottery, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport const useLotteryTicket = () => {\n  _s9();\n\n  const abi = lotteryTicket;\n  return useContract(abi, getLotteryTicketAddress());\n};\n\n_s9(useLotteryTicket, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport const useMasterchef = () => {\n  _s10();\n\n  const abi = masterChef;\n  return useContract(abi, getMasterChefAddress());\n};\n\n_s10(useMasterchef, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport const useSousChef = id => {\n  _s11();\n\n  const config = poolsConfig.find(pool => pool.sousId === id);\n  const rawAbi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef;\n  const abi = rawAbi;\n  return useContract(abi, getAddress(config.contractAddress));\n};\n\n_s11(useSousChef, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport const usePointCenterIfoContract = () => {\n  _s12();\n\n  const abi = pointCenterIfo;\n  return useContract(abi, getPointCenterIfoAddress());\n};\n\n_s12(usePointCenterIfoContract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport default useContract;","map":{"version":3,"sources":["/Users/mirtauhidulislam/Downloads/saltswap-frontend-main/src/hooks/useContract.ts"],"names":["useEffect","useState","useWeb3","getAddress","getMasterChefAddress","getCakeAddress","getLotteryAddress","getLotteryTicketAddress","getBunnyFactoryAddress","getPancakeProfileAddress","getPancakeRabbitsAddress","getPointCenterIfoAddress","poolsConfig","PoolCategory","ifo","erc20","bunnyFactory","pancakeRabbits","lottery","lotteryTicket","masterChef","sousChef","sousChefBnb","profile","pointCenterIfo","useContract","abi","address","contractOptions","web3","contract","setContract","eth","Contract","useIfoContract","ifoAbi","useERC20","erc20Abi","useCake","useBunnyFactory","bunnyFactoryAbi","usePancakeRabbits","pancakeRabbitsAbi","useProfile","profileABIAbi","useLottery","useLotteryTicket","useMasterchef","useSousChef","id","config","find","pool","sousId","rawAbi","poolCategory","BINANCE","contractAddress","usePointCenterIfoContract"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport useWeb3 from 'hooks/useWeb3'\nimport {\n  getAddress,\n  getMasterChefAddress,\n  getCakeAddress,\n  getLotteryAddress,\n  getLotteryTicketAddress,\n  getBunnyFactoryAddress,\n  getPancakeProfileAddress,\n  getPancakeRabbitsAddress,\n  getPointCenterIfoAddress,\n} from 'utils/addressHelpers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\nimport ifo from 'config/abi/ifo.json'\nimport erc20 from 'config/abi/erc20.json'\nimport bunnyFactory from 'config/abi/bunnyFactory.json'\nimport pancakeRabbits from 'config/abi/pancakeRabbits.json'\nimport lottery from 'config/abi/lottery.json'\nimport lotteryTicket from 'config/abi/lotteryNft.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\nimport profile from 'config/abi/pancakeProfile.json'\nimport pointCenterIfo from 'config/abi/pointCenterIfo.json'\n\nconst useContract = (abi: AbiItem, address: string, contractOptions?: ContractOptions) => {\n  const web3 = useWeb3()\n  const [contract, setContract] = useState(new web3.eth.Contract(abi, address, contractOptions))\n\n  useEffect(() => {\n    setContract(new web3.eth.Contract(abi, address, contractOptions))\n  }, [abi, address, contractOptions, web3])\n\n  return contract\n}\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoContract = (address: string) => {\n  const ifoAbi = (ifo as unknown) as AbiItem\n  return useContract(ifoAbi, address)\n}\n\nexport const useERC20 = (address: string) => {\n  const erc20Abi = (erc20 as unknown) as AbiItem\n  return useContract(erc20Abi, address)\n}\n\nexport const useCake = () => useERC20(getCakeAddress())\n\nexport const useBunnyFactory = () => {\n  const bunnyFactoryAbi = (bunnyFactory as unknown) as AbiItem\n  return useContract(bunnyFactoryAbi, getBunnyFactoryAddress())\n}\n\nexport const usePancakeRabbits = () => {\n  const pancakeRabbitsAbi = (pancakeRabbits as unknown) as AbiItem\n  return useContract(pancakeRabbitsAbi, getPancakeRabbitsAddress())\n}\n\nexport const useProfile = () => {\n  const profileABIAbi = (profile as unknown) as AbiItem\n  return useContract(profileABIAbi, getPancakeProfileAddress())\n}\n\nexport const useLottery = () => {\n  const abi = (lottery as unknown) as AbiItem\n  return useContract(abi, getLotteryAddress())\n}\n\nexport const useLotteryTicket = () => {\n  const abi = (lotteryTicket as unknown) as AbiItem\n  return useContract(abi, getLotteryTicketAddress())\n}\n\nexport const useMasterchef = () => {\n  const abi = (masterChef as unknown) as AbiItem\n  return useContract(abi, getMasterChefAddress())\n}\n\nexport const useSousChef = (id) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const rawAbi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  const abi = (rawAbi as unknown) as AbiItem\n  return useContract(abi, getAddress(config.contractAddress))\n}\n\nexport const usePointCenterIfoContract = () => {\n  const abi = (pointCenterIfo as unknown) as AbiItem\n  return useContract(abi, getPointCenterIfoAddress())\n}\n\nexport default useContract\n"]},"metadata":{},"sourceType":"module"}